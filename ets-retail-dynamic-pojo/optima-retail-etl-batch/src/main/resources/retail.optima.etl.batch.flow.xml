<?xml version="1.0" encoding="UTF-8" ?>
<beans	xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:c="http://www.springframework.org/schema/c"	
		xmlns:int="http://www.springframework.org/schema/integration"
		xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
		xsi:schemaLocation="
				http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
				http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.2.xsd
				http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms-2.2.xsd">
				
	<!-- Step 1 for Controller Message JMS Adapter -->
	
	<bean id="batchRequestConsumer"
		class="org.springframework.integration.endpoint.PollingConsumer"
		c:inputChannel-ref="outboundBatchRequestChannel" c:handler-ref="incomingMessageHandler"
		p:receiveTimeout="-1" />
		
	<!-- Unmarshalling bean -->
	<bean	id="unmarshallingTransformer"
			class="org.springframework.integration.xml.transformer.UnmarshallingTransformer"
			c:unmarshaller-ref="marshaller"
	/>

	<!-- Unmarshal output channel -->
	<int:channel id="unmarshalOutputChannel" />
	<bean	id="incomingMessageHandler"
			class="com.citi.retail.optima.etl.batch.messaging.BatchIncomingMessageHandler">
		<property name="transformer" ref="unmarshallingTransformer"/>
		<property name="outputChannel" ref="messageRoutingChannel"/>
	</bean>

	<int:channel id="messageRoutingChannel" />
	<int:header-value-router input-channel="messageRoutingChannel" header-name="MESSAGE_TYPE">
		<!-- <int:mapping value="ORETL_NEW_JOB_REQUEST" channel="feedRequestChannel" /> -->
		<int:mapping value="DATA_ACQUISITION" channel="userSubRequestChannel" />
	</int:header-value-router>

    <int:channel id="userSubRequestChannel" />
    
    <int:channel id="llrJmsOutputChannel" />
    
     <bean  id="fileFeedHandler"
            class="com.citi.retail.optima.etl.batch.messaging.FileFeedMessageHandler"
            p:jobInstanceDao-ref="jobInstanceDao"
            p:jobMessageDao-ref="jobMessageDao"
            p:internalMessageCreator-ref="internalMessageCreator" p:jobConfigDao-ref="jobConfigDao"
    />
    
    <bean id="internalMessageCreator"
          class="com.citi.retail.optima.etl.batch.messaging.InternalMessageCreator"
          p:internalMessageChannel-ref="batchCompletionHandlerChannel" p:jobConfigDao-ref="jobConfigDao" />
          
    <int:service-activator
            id="userSubMessageHandler"
            input-channel="userSubRequestChannel"
            ref="fileFeedHandler"
            method="handleIncomingFeedRequest"
            output-channel="fileJobRequestChannel"
    />
    
      <int:channel id="fileJobRequestChannel" />
    
	<!-- Step 4 - Job Launching Service -->
	<int:service-activator
            id="fileJobLaunchingService"
            input-channel="fileJobRequestChannel"
            ref="fileJobLauncherService"
            method="handleMessage"
    />
	
	   <!-- Job launching bean -->
    <bean   id="fileJobLauncherService"
            class="com.citi.retail.optima.etl.batch.job.FileJobLauncherService"
            p:batchjobLauncher-ref="batchjobLauncher"
            p:jobDetailsDao-ref="batchDetailsDao"
            p:jobInstanceDao-ref="jobInstanceDao"
            p:jobOperator-ref="jobOperator"
            p:batchDaoImpl-ref="messageDao"
            p:referenceValueLookup-ref="referenceValueLookup"
            p:internalMessageCreator-ref="internalMessageCreator"
            p:queryExecutor-ref="queryExecutor" p:jobConfigDao-ref="jobConfigDao"
    />

	<bean id="batchjobLauncher"
	      class="com.citi.retail.optima.etl.batch.job.BatchJobLauncher"
	      p:jobLauncher-ref="jobLauncher"
          p:jobInstanceDao-ref="jobInstanceDao"
          p:internalMessageCreator-ref="internalMessageCreator" p:jobConfigDao-ref="jobConfigDao"/>
          
	<bean id="jobParamIncrementer" class="com.citi.retail.optima.etl.batch.job.JobParamIncrementer"/>
	
	<!-- Step 5 Batch request dispatcher -->
	<!-- <int:channel id="batchRequestOutputChannel" />-->

	<!-- Dispatch transforming -->
	<!-- 
	<bean	id="marshallingTransformer"
			class="org.springframework.integration.xml.transformer.MarshallingTransformer"
			c:marshaller-ref="marshaller"
			c:resultTransformer-ref="resultTransformer"
	/>

	<bean	id="resultTransformer"
			class="org.springframework.integration.xml.transformer.ResultToStringTransformer"
	/>

	<int:transformer
			id="batchTransformer"
			ref="marshallingTransformer"
			input-channel="batchRequestOutputChannel"
			method="transform"
			output-channel="batchCompletionHandlerChannel"
	/> -->

	<!-- Error handling logic -->
	<!-- <int:channel id="errorChannel"></int:channel> -->
	
	<!-- 
	<int:service-activator
			input-channel="errorChannel"
			ref="exceptionHandler"
			method="handleException"
	/>
	
	<bean	id="exceptionHandler"
			class="com.citi.retail.optima.etl.common.exception.ExceptionHandler"
	/> 

	<bean	id="jmsExceptionLogging"
			class="com.citi.retail.optima.etl.common.exception.JmsLoggingExceptionPublisher"
			p:jmsTemplate-ref="loggingJmsTemplate"
	/>
	--> 

    <!-- Genesis output -->
    <int:channel id="genesisOutputChannel" />

<!--     <int-jms:outbound-channel-adapter
    		id="genesisNotification"
    		channel="genesisOutputChannel"
    		connection-factory="jmsConnectionFactory"
    		destination="genesisQueue"
    /> -->
</beans>