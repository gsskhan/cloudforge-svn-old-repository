<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"        
        xmlns:util="http://www.springframework.org/schema/util"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="
        		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
        		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
       
    <context:annotation-config/>
        
        <!-- *********************************************** TW JOB Data Service = START ***************************************************** -->

	<bean id="hkDataService" factory-bean="preProcessorDataServiceFactory"
		factory-method="getPreProcessorDataService" scope="step">
		<constructor-arg type="java.lang.Long"
			value="#{jobParameters[batchInstanceId]}" />
		<constructor-arg type="java.lang.String"
			value="com.citi.optima.retail.batch.preprocess.HkDataServiceImpl" />
	</bean>
	
	
	<!-- *********************************************** TW JOB Data Service = END ***************************************************** -->
	
        
        <!-- **********************************************  PREPROCESSOR CONFG STARTS   ****************************************************-->
        
     <!--    <bean id="ficoThreadLoad"		class="org.springframework.aop.target.ThreadLocalTargetSource">
        	<property name="targetBeanName" value="preprocessFicoDataProvider"/>
        </bean>  -->

 	<bean id="preprocessHkCrdFicoDataProvider"
		class="com.citi.optima.retail.batch.preprocess.PreProcessDataProviderImpl"
		depends-on="hkDataService" scope="step">
		<property name="preprocessMap"
			value="#{(hkDataService.getLocalPreProcessorDataServiceMap('hkCrdFicoDataProcessStep'))}" />
	</bean>

	<bean id="preprocessHkCrdWoDataProvider"
		class="com.citi.optima.retail.batch.preprocess.PreProcessDataProviderImpl"
		depends-on="hkDataService" scope="step">
		<property name="preprocessMap"
			value="#{(hkDataService.getLocalPreProcessorDataServiceMap('hkCrdWoDataProcessStep'))}" />
	</bean>
	<bean id="preprocessHkCrdNcDataProvider"
		class="com.citi.optima.retail.batch.preprocess.PreProcessDataProviderImpl"
		depends-on="hkDataService" scope="step">
		<property name="preprocessMap"
			value="#{(hkDataService.getLocalPreProcessorDataServiceMap('hkCrdDataNcProcessStep'))}" />
	</bean>
 
	<bean id="preprocessHkCrdRecvDataProvider"
		class="com.citi.optima.retail.batch.preprocess.PreProcessDataProviderImpl"
		depends-on="hkDataService" scope="step">
		<property name="preprocessMap"
			value="#{(hkDataService.getLocalPreProcessorDataServiceMap('hkCrdRecvDataProcessStep'))}" />
	</bean>
	
	<bean id="preprocessHkCrdDelqDataProvider"
		class="com.citi.optima.retail.batch.preprocess.PreProcessDataProviderImpl"
		depends-on="hkDataService" scope="step">
		<property name="preprocessMap"
			value="#{(hkDataService.getLocalPreProcessorDataServiceMap('hkCrdDelqDataProcessStep'))}" />
	</bean>
	
	<bean id="preprocessHkCrdTransferDataProvider"
		class="com.citi.optima.retail.batch.preprocess.PreProcessDataProviderImpl"
		depends-on="hkDataService" scope="step">
		<property name="preprocessMap"
			value="#{(hkDataService.getLocalPreProcessorDataServiceMap('hkCrdTransferDataProcessStep'))}" />
	</bean>
	
	<!-- <bean id="preprocessDataServiceFact" factory-bean="preProcessorDataServiceFactory"
		factory-method="getPreProcessorDataService" scope="step">
		<constructor-arg type="java.lang.Long"
			value="#{jobParameters[batchInstanceId]}" />
		<constructor-arg type="java.lang.String"
			value="com.citi.optima.retail.batch.preprocess.PreProcessorDataServiceImpl" />
	</bean> -->

	
	
	<!-- **********************************************  PREPROCESSOR CONFG END      ****************************************************-->
	
</beans>