<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-2.5.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/batch 
		http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
		http://www.springframework.org/schema/aop
 		http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">


	<!-- *********************************************** TW MTG JOB Configuration=START ***************************************************** -->
	<batch:job id="DA-TW-PL-Batch" job-repository="jobRepository" restartable="true" incrementer="jobParamIncrementer">
		<batch:step id="springStart" next="fxrateProcessStep">
			<batch:tasklet ref="timerTaskletBegin" />
		</batch:step>
		<batch:step id="fxrateProcessStep" parent="fxrateDataProcessStep"
			next="mtgRegisterPreprocessLoaderStep" />
		<batch:step id="mtgRegisterPreprocessLoaderStep" next="twLoansMemoProcessStep">
			<batch:tasklet ref="mtgRegisterPreprocessLoader" />
		</batch:step>
		<batch:step id="twLoansMemoProcessStep" parent="twMtgMemoPrepropStep:master"
			next="twLoansTdrProcessStep" />
		<batch:step id="twLoansTdrProcessStep" parent="twMtgTdrPrepropStep:master"
			next="twLoansFipProcessStep" />
		<batch:step id="twLoansFipProcessStep" parent="twMtgFipPrepropStep:master"
			next="twLoansBauimpProcessStep" />
			<!-- commented out by subhamoy as there is no OREO file for mortgage  -->
		<!-- <batch:step id="twLoansOreoProcessStep" parent="twMtgOreoPrepropStep:master"
			next="twLoansBauimpProcessStep" /> -->	
		<batch:step id="twLoansBauimpProcessStep" parent="twMtgBauimpPrepropStep:master"
					next="twLoansFicoProcessStep" />
<!-- next="mutcolProcessStep" -->

		<batch:step id="twLoansFicoProcessStep" parent="twMtgFicoPrepropStep:master"
			next="twLaonsMutcolProcessStep" />
		<batch:step id="twLaonsMutcolProcessStep" parent="twMtgMutcolPrepropStep:master"
			next="twLoansTeaserProcessStep" />
		<batch:step id="twLoansTeaserProcessStep" parent="twMtgTeaserPrepropStep:master"
			next="loansAlsProcessStep" />
		<batch:step id="loansAlsProcessStep" parent="loansAlsProcessStep:master"   
			next="loansAlsAggregationStep" />
		<batch:step id="loansAlsAggregationStep" next="loansFileMergeStep" >
			<batch:tasklet ref="loansproccrAggregationResultsTasklet" />
		</batch:step>		
		
		<batch:step id="loansFileMergeStep" next="endSpringStep" >
			<batch:tasklet ref="loansfileMergeTasklet" />
			<batch:listeners>
				<batch:listener ref="loansfileMergeTasklet"/>
			</batch:listeners>
		</batch:step>		
		
		<batch:step id="endSpringStep">
			<batch:tasklet ref="timerTaskletEnd" />
		</batch:step>		
		
		<batch:listeners>
			<batch:listener ref="twMtgAcqGcbcJobListener" />
		</batch:listeners>
		
	</batch:job>
			

	
	<!-- *********************************************** ALS-Loans Step Configuration=START ***************************************************** -->
	<bean name="loansAlsProcessStep:master"
		class="org.springframework.batch.core.partition.support.PartitionStep">
		<property name="jobRepository" ref="jobRepository" />
		<property name="stepExecutionSplitter">
			<bean
				class="org.springframework.batch.core.partition.support.SimpleStepExecutionSplitter">
				<constructor-arg ref="jobRepository" />
				<constructor-arg ref="loansAlsDataProcessStep" />
				<constructor-arg ref="loansAlsPartitioner" />
			</bean>
		</property>
		<property name="partitionHandler">
			<bean
				class="org.springframework.batch.core.partition.support.TaskExecutorPartitionHandler"
				scope="step">
				<property name="taskExecutor">
					<bean
						class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
						<property name="corePoolSize" value="8" />
						<property name="maxPoolSize" value="12" />
					</bean>
				</property>
				<property name="step" ref="loansAlsDataProcessStep" />
				<property name="gridSize" value="8" />
			</bean>
		</property>
	</bean>

	<bean id="loansAlsPartitioner"
		class="com.citi.retail.optima.etl.batch.job.infra.FlatFileDataPartitioner"
		scope="step">
		<property name="directoryName" value="#{#getInputFilePath(jobParameters[COUNTRYPRODUCT])}" />
		<property name= "originalFile" value="#{#getInputFilePath(jobParameters[COUNTRYPRODUCT])}" />
		<property name="splitFile" value="#{#getInputFilePath(jobParameters[COUNTRYPRODUCT])}" />
		<property name="archvFile" value="#{#getArchiveFilePath(jobParameters[COUNTRYPRODUCT])}" />
		<property name="evalContext" ref="customEvaluationContext" />
		<property name="filePattern" value="#{jobParameters[LOANS]}" />
		<property name="noOfRecordsPerSplit" value="100000" />
				<property name="startTime" value="#{jobParameters[STRT_TIME]}"></property> 
		<property name="jobName" value="#{jobParameters[JOB_NAME]}"></property>
	</bean>

	<batch:step id="loansAlsDataProcessStep">
		<batch:tasklet allow-start-if-complete="false">
			<batch:chunk reader="loansAlsCsvReader" processor="loansAlsDataProcessor"
				writer="loansCvsFileItemWriter" commit-interval="10000" skip-limit="50000">
				<batch:skippable-exception-classes>
					<batch:include
						class="com.citi.retail.optima.etl.common.exception.OptimaRetailDataException" />
				</batch:skippable-exception-classes>
			</batch:chunk>
		</batch:tasklet>
		
		<batch:listeners>
			<batch:listener ref="loansAlsEnrichmentProcessor" />
			<batch:listener ref="loansAlsAggregationProcessor" />
			<batch:listener ref="loansCvsFileItemWriter" />
			<batch:listener ref="loansCommonBalanceWriter" />
		</batch:listeners>
	</batch:step>
	
	<bean id="loansAlsCsvReader" class="com.citi.retail.optima.etl.batch.job.reader.CustomItemReader"
		scope="step" lazy-init="true">
<!-- 		<property name="linesToSkip" value="1" /> -->
		<property name="strict" value="true"></property>
		<property name= "fileName" value="#{stepExecutionContext[fileName]}"></property>		
		<property name="resource" value="#{stepExecutionContext[fileName]}"></property>
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">

						<property name="delimiter" value="|" />
<!-- 						<property name="names" -->
<!-- 							value="bookdate,cmrvdate,dateClos,dlastpay,dlgavupd,dlnavoup,dltran,dlxfer,dmature,dorgappr,dpayoff,dpstatus, -->
<!-- 							drategur,duser1,duser3,matdate,misdate,ndd,pddate,primoffdate,regdate,retendte,rtuserdte1,ueinsexpdt,unernfnt, -->
<!-- 							orgunamt,preason,acrcbase,areason,acalimit,secbal,acaacno,acacrln,acaind,accstat,acctindv,accttype,acctnumb, -->
<!-- 							acptid,adacct,adbank,adbrch,amtdev,amtpledg,anrprin,anrprinl,ao,apcm,aprcom1,aprcom2,aprvlamt,autovol,basenumb, -->
<!-- 							bauimp,billmthd,billtype,billday,bldgyear,bldgnumb,bldgsize,bnchmrkr,branchno,bucket,busgroup,buyback,cardcode, -->
<!-- 							carmake,claimflr,cleanind,closeind,disbamt,miscell,collage,location,collsize,colltype,commamt,constryr,cpi, -->
<!-- 							croff,crscore,ctl1,ctl2,ctl3,cloffval,currterm,custtype,curcbase,custnumb,daywoff,dburden,delhist,disbmthd, -->
<!-- 							dcommres,dlrgrade,dintrate,dlrloc,dlrtype,dlrcode,down,dpd30,dpd5,dpd60,dpd90,dpdnow,dpdpast,dpdprev,dutystamp, -->
<!-- 							enftipad,enftinupad,enuidpad,enuidunpad,enfntpad,enfntunpad,enrint,enrprin,enrprinl,examtlt,devcode1,devcode2, -->
<!-- 							devcode3,devoff1,devoff2,devoff3,expamrt,expamrtl,feesdue,extagen1,extagen2,extagen3,extagen4,faceamt,feeamrt, -->
<!-- 							feeamrtl,firinsco,flags,fmsactno,gtamtdev,hplist,incproof,insco,insnum,inspolno,instpmth,instamt,insucomm, -->
<!-- 							insucomp,insupre,insutype,insucpa,insuctl,intaccrm,intmth,intern,intrate,jointind,lpayamt,latecg,latecgl, -->
<!-- 							lenempl,llimtamt,lmtunit,lpurpose,linctax,lndlotno,lndsize,rloansec,loandesc,loanstat,loantype,lxlndval, -->
<!-- 							ltvamt,ltvosbal,manuyr,mat_days,missacct,morttype,mtdaamt,maggrday,mtdcomml,mtdint,carnaton,nava,navarat, -->
<!-- 							navo,newlnamt,newrretn,newind,newused,ninstamt,noflrs,noinstal,nolndlot,pmtdue,orggav,ogavrat,onavorat, -->
<!-- 							osballpay,lbalamt,lbalunit,ovcode,package,ppayamt,paytype,payoff,payofcde,repayoff,pdofntamt,pdoiencamt,pfpn, -->
<!-- 							pnltyamt,pnltypct,poolcode,poolnum,premoffamt,premoffind,penalty,priortyv,pstatus,process,prodtype,clsfn, -->
<!-- 							ppurpose,quakeinsamt,raindxcd,rcbase,recode,reasclos,recovery,recoverl,refinflg,regcashd,regno,regtype,regchas, -->
<!-- 							regeng,regmodel,regprice,renstat,repaymed,resamt,retentcd,rewflag,rtuseramt1,rtusergrp7,salescom,salesint,score, -->
<!-- 							scoreid,scoreind,sectype,source,stafflag,stamp,subsys,tenor,tenorday,tpar,ttenor,unint,unearnin,unfti,unpdofti, -->
<!-- 							unpdouid,unuid,unpaidamt,updgav,updgavra,updnavo,unavorat,useramt1,useramt2,useramt3,useramt4,duser2,userfees, -->
<!-- 							usergrp1,usergrp2,usergrp3,usergrp4,variance,disvat,writeoff,writeofl,ytdcomml,ytdint,zipcode,flag,fileord, -->
<!-- 							fireinsco,uefireeno,uefireinsamt,uefirepno,uepremad,uequakeeno,uequakepno,ahcoffsetpct,bailoutbankcd,bldgprice, -->
<!-- 							boocpmtmethod,brkrid,constrcode,drawyear,laborloanapplnum,loanprgmcode,origfix,scrvnercd,theinsue,woffbal,appno, -->
<!-- 							bldgcadate,boocloantype,brkrcode,cntycitycode,drawnumber,itermmaturdate,laborloantaxno,materl,rtapr,staffrefnmbr, -->
<!-- 							totflr,woffdate,fxrateexpdt,afacct,afacct2,afrelflag,afrelflag2,g_source,gcbcPortfolioId,finFico" />  -->
<!-- 							,gcbcportfolioid,finfico -->
						<property name="names" value="#{#getFileColumnNameList('TW_PL_ALS')}"/>
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="com.citi.retail.optima.etl.batch.job.mapper.TwPlAlsFieldSetMapper">
						<property name="dateFormat" ref="twLoansDateFormat"/>
					</bean>
		</property>
			</bean>
		</property>
	</bean>
	
	<bean id="twLoansDateFormat" class="java.text.SimpleDateFormat">
		<constructor-arg value="yyyy-MM-dd" />
	</bean>
			
	<bean id="loansAlsDataProcessor"
		class="org.springframework.batch.item.support.CompositeItemProcessor"
		scope="step">
		<property name="delegates">
			<util:list>
				<ref bean="loansAlsEnrichmentProcessor" />
				<ref bean="loansAlsAggregationProcessor" />
			</util:list>
		</property>
	</bean>
	
		<bean id="loansAlsEnrichmentProcessor"
		class="com.citi.retail.optima.etl.batch.job.processor.EnrichmentProcessor"
		scope="step" p:enrichmentServiceBean-ref="loansAlsEnrichmentService"
		p:timeTracker-ref="timeTracker">
		<property name="batchInstanceId" value="#{jobParameters[batchInstanceId]}" />
		<property name="jobName" value="#{jobParameters[JOB_NAME]}"/>
		<property name="fileName" value="#{stepExecutionContext[fileName]}"></property>
		
		<property name="auditFileId" value="#{jobParameters[AUDITFILEID]}"/>
		<property name="auditFiles" value="#{jobParameters[AUDITFILES]}"/>
		<property name="jobMessageDao" ref="jobMessageDao"/>
		<property name="eTLQueryExecutor" ref="queryExecutor" />       
		<property name="ctlFileDt" value="#{jobParameters[CTLFILECREATIONDT]}"/>
		<property name="jobConfigDao" ref="jobConfigDao" />
	</bean>
	
	<bean	id="loansAlsEnrichmentService"
			class="com.citi.retail.optima.etl.enrichment.impl.EnrichmentServiceImpl"
			p:evalContext-ref="customEvaluationContext"
			p:enrichmentRules-ref="enrichmentRulesHolder"
			p:keyList="#{#getConcatenatedKeys(jobParameters[sys_proc_id], 'loansAlsDataProcStep', null)}" 
			scope="step"/>
	
	
	<bean name="loansAlsAggregationProcessor"
		class="com.citi.retail.optima.etl.batch.job.processor.AggregationProcessor"
		init-method="init" scope="step">
		<property name="aggregationServiceFactory" ref="aggregationServiceFactory" />
		<property name="batchInstanceId" value="#{jobParameters[batchInstanceId]}" />
		<property name="monthEndDate" value="#{jobParameters[reportDate]}" />
		<property name="keyList"
			value="#{#getConcatenatedKeys(jobParameters[sys_proc_id], 'loansAlsDataProcessStep',null)}" />
		<property name="stepName" value="loansAlsDataProcessStep" />
		<property name="accountTraceabilityRequired" value="false" />
		<property name="timeTracker" ref="timeTracker" />
		<property name="sysProcId" value="#{jobParameters[sys_proc_id]}" />
	</bean>
	
	<bean id="loansCvsFileItemWriter" class="com.citi.retail.optima.etl.batch.job.writer.LoansConditionalCompositeItemWriter" scope="step">
<!-- 		<property name="excludeItemDelegate" ref="loansRecFileWriter"/> -->
		<property name="delegates">
			<util:list>
				<ref bean="loansIndicativeFileWriter"/>
				<ref bean="loansArrangementIpWriter"/>
				<ref bean="loansArrangementRatingWriter"/>
				<ref bean="loansArrangementRateWriter"/>
				<ref bean="loansCommonBalanceWriter"/>
			</util:list>
		</property>
	</bean>
	
	
	<!-- *********************************************** ALS-Loans Step Configuration=END ***************************************************** -->
	
	<!-- *********************************************** Loans Aggregation Step Configuration=START ***************************************************** -->
	
	<bean name="loansproccrAggregationResultsTasklet" class="com.citi.retail.optima.etl.batch.tasklet.FooterSummaryAggregationResultTasklet"
		scope="step">
		<property name="aggregationServiceFactory" ref="aggregationServiceFactory" />
		<property name="batchInstanceId" value="#{jobParameters[batchInstanceId]}" />
		<property name="stepName" value="loansAlsDataProcessStep" />
		<property name="sysProcId" value="#{jobParameters[sys_proc_id]}" />
		<property name="footerAggrRuleId" value="110" />
		<property name="footerItemList" ref="plFooterItemList" />
		<property name="aggrFooterWriter" ref="loansAggrFooterWriter"/>
		<property name="jobConfigDao" ref="jobConfigDao" />
	</bean>
	
	<bean name="loansTRLRecord" class="com.citi.retail.optima.etl.common.model.LoansTRLRecord"
		scope="prototype" />
	
	
	
<!-- 	<bean name="mortgageTRLRecord" class="com.citi.retail.optima.etl.common.model.MortgageTRLRecord" -->
<!-- 		scope="prototype" /> -->
		
<!-- 	<bean name="ALSRecord" class="com.citi.retail.optima.etl.common.model.ALSRecord" -->
<!-- 		scope="prototype" /> -->
	

	<!-- *********************************************** Rainbow Aggregation Step Configuration=END ***************************************************** -->
	
	<bean id="loansAggrFooterWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
	
 		<property name="lineAggregator">
	  	<bean class="org.springframework.batch.item.file.transform.FormatterLineAggregator" >
	  		<property name="fieldExtractor">
	  		<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
	  			<property name="names" value="writeCount,hashFileType,aggregatedHashValue"/>
	  		</bean>
	  		</property>
	  	<property name="format" value="TRL%09d%-10s%018d"></property>
	  </bean>
		</property>
  </bean>  
    
  <util:list id="loansfooterItemList" scope="step" list-class="java.util.ArrayList">
			<bean class="com.citi.retail.optima.etl.common.model.RainbowFileFooter" p:hashFileType="FINSERVTYP" p:hashField="eFinServiceTypId" 
			p:outputFileResourceName="GN_SR67841_#{jobParameters[productCode2]}_#{jobParameters[region]}_#{jobParameters[countryCode]}_RSK_#{jobParameters[dateOfInfo]}_HIST_#{jobParameters[currentDate]}_IND_#{jobParameters[versionId]}."/>
			<bean class="com.citi.retail.optima.etl.common.model.RainbowFileFooter" p:hashFileType="PCT" p:hashField="ePctAmt" 
			p:outputFileResourceName="GN_SR67841_#{jobParameters[productCode2]}_#{jobParameters[region]}_#{jobParameters[countryCode]}_RSK_#{jobParameters[dateOfInfo]}_HIST_#{jobParameters[currentDate]}_AIP_#{jobParameters[versionId]}."/>
			<bean class="com.citi.retail.optima.etl.common.model.RainbowFileFooter" p:hashFileType="RNK" p:hashField="eRank" 
			p:outputFileResourceName="GN_SR67841_#{jobParameters[productCode2]}_#{jobParameters[region]}_#{jobParameters[countryCode]}_RSK_#{jobParameters[dateOfInfo]}_HIST_#{jobParameters[currentDate]}_AIR_#{jobParameters[versionId]}."/>
			<bean class="com.citi.retail.optima.etl.common.model.RainbowFileFooter" p:hashFileType="RTE_VARTYP" p:hashField="eRateVarTypeId" 
			p:outputFileResourceName="GN_SR67841_#{jobParameters[productCode2]}_#{jobParameters[region]}_#{jobParameters[countryCode]}_RSK_#{jobParameters[dateOfInfo]}_HIST_#{jobParameters[currentDate]}_AR_#{jobParameters[versionId]}."/> 
			<bean class="com.citi.retail.optima.etl.common.model.RainbowFileFooter" p:hashFileType="BAL_TYP" p:hashField="eBalType" 
			p:outputFileResourceName="GN_SR67841_#{jobParameters[productCode2]}_#{jobParameters[region]}_#{jobParameters[countryCode]}_RSK_#{jobParameters[dateOfInfo]}_HIST_#{jobParameters[currentDate]}_CB_#{jobParameters[versionId]}."/>
	</util:list>
  
	<bean name="loansfileMergeTasklet" class="com.citi.retail.optima.etl.batch.tasklet.FileMergeTasklet"
		scope="step">
		<property name="footerItemList" ref="plFooterItemList" />
		<property name="header" value="HDR#{jobParameters[currentDate]}#{jobParameters[dateOfInfo]}" />
		<property name="format" value="%3s%09d%-10s%018d" />
		<property name="outputDirectory" value="#{#getOutputFilePath(jobParameters[COUNTRYPRODUCT])}" />
		<property name="inputDirectory" value="#{#getInputFilePath(jobParameters[COUNTRYPRODUCT])}" />
		
		<property name="auditFileId" value="#{jobParameters[AUDITFILEID]}"/>
<!-- 		<property name="auditFiles" value="#{jobParameters[AUDITFILES]}"/> -->
		<property name="rainbowFileName" value="#{jobParameters[LOANS]}"/>
		<property name="queryExec" ref="queryExecutor"/>
		<property name="jobMessageDao" ref="jobMessageDao"/>
		<property name="archiveDirectory" value="#{#getArchiveFilePath(jobParameters[COUNTRYPRODUCT])}" />
	<property name="batchInstanceId" value="#{jobParameters[batchInstanceId]}" />
	<property name="jobConfigDao" ref="jobConfigDao" />
	</bean>

</beans>