<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd">


<batch:job id="syncDbJobId" restartable="true" >
	
	<!-- Read mysql tables and create data dump file for backup -->
	<batch:step id="mysqlUsersTableBackupStep" next="mysqlConstantsTableBackupStep">	
		<batch:tasklet transaction-manager="dbTxManager">
			<batch:chunk reader="readUsersTable" writer="writeUsersDatatableFile" commit-interval="100" />
			<batch:listeners>
				<batch:listener ref="commonStepExecutionListner" />
				<batch:listener ref="commonItemWriterListner"/>
				<batch:listener ref="commonItemReadListner"/>				
			</batch:listeners>
		</batch:tasklet>	
	</batch:step>
	<batch:step id="mysqlConstantsTableBackupStep" next="mysqlPaperStoreTableBackupStep">
		<batch:tasklet transaction-manager="dbTxManager">
			<batch:chunk reader="readConstantsTable" writer="writeConstantsDatatableFile" commit-interval="100" />
			<batch:listeners>
				<batch:listener ref="commonStepExecutionListner" />
				<batch:listener ref="commonItemWriterListner"/>
				<batch:listener ref="commonItemReadListner"/>
			</batch:listeners>
		</batch:tasklet>	
	</batch:step>	
	<batch:step id="mysqlPaperStoreTableBackupStep" next="moveFilesToHdfsStep">
		<batch:tasklet transaction-manager="dbTxManager">
			<batch:chunk reader="readPaperStoreTable" writer="writePaperStoreDatatableFile" commit-interval="100" />
			<batch:listeners>
				<batch:listener ref="commonStepExecutionListner" />
				<batch:listener ref="commonItemWriterListner"/>
				<batch:listener ref="commonItemReadListner"/>
			</batch:listeners>
		</batch:tasklet>	
	</batch:step>	
	<!-- copy all the dump files to HDFS -->
	<batch:step id="moveFilesToHdfsStep" >
		<batch:tasklet ref="moveDumpToHdfs" transaction-manager="dbTxManager">
			<batch:listeners>
				<batch:listener ref="commonStepExecutionListner" />
				<batch:listener ref="commonItemWriterListner"/>
				<batch:listener ref="commonItemReadListner"/>
			</batch:listeners>
		</batch:tasklet>	
	</batch:step>	
</batch:job>

<bean id="readUsersTable" class="org.springframework.batch.item.database.HibernateCursorItemReader">
	<property name="sessionFactory" ref="sessionFactory" />
	<property name="queryString" value="from User" />
</bean>
<bean id="writeUsersDatatableFile" class="org.springframework.batch.item.file.FlatFileItemWriter">
	<property name="resource" value="file:${mysql.tables.dump.path}/${mysql.system.users.table.filename}" />
	<property name="lineSeparator" value="|" />
	<property name="shouldDeleteIfExists" value="true" />
	<property name="lineAggregator">
		<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
			<property name="delimiter" value="~" />
			<property name="fieldExtractor">
				<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
					<property name="names" value="userId,username,password,address,email,role" />
				</bean>
			</property>
		</bean>	
	</property>
</bean>

<bean id="readConstantsTable" class="org.springframework.batch.item.database.HibernateCursorItemReader">
	<property name="sessionFactory" ref="sessionFactory" />
	<property name="queryString" value="from Constants" />
</bean>
<bean id="writeConstantsDatatableFile" class="org.springframework.batch.item.file.FlatFileItemWriter">
	<property name="resource" value="file:${mysql.tables.dump.path}/${mysql.constants.table.filename}" />
	<property name="lineSeparator" value="|" />
	<property name="shouldDeleteIfExists" value="true" />
	<property name="lineAggregator">
		<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
			<property name="delimiter" value="~" />
			<property name="fieldExtractor">
				<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
					<property name="names" value="constantId,variable,variableId,value,parentVariableId" />
				</bean>
			</property>
		</bean>	
	</property>
</bean>

<bean id="readPaperStoreTable" class="org.springframework.batch.item.database.HibernateCursorItemReader">
	<property name="sessionFactory" ref="sessionFactory" />
	<property name="queryString" value="select paperStoreId, paperNumber, paperTitle, paperData, createdByUserId, creationTime from PaperStore" />
</bean>
<bean id="writePaperStoreDatatableFile" class="org.springframework.batch.item.file.FlatFileItemWriter">
	<property name="resource" value="file:${mysql.tables.dump.path}/${mysql.paper.store.table.filename}" />
	<property name="lineSeparator" value="|" />
	<property name="shouldDeleteIfExists" value="true" />
	<property name="lineAggregator">
		<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
			<property name="delimiter" value="~" />
			<property name="fieldExtractor">
				<bean class="org.springframework.batch.item.file.transform.PassThroughFieldExtractor"/>
			</property>
		</bean>	
	</property>
</bean>

<bean id="moveDumpToHdfs" class="org.dms.batch.tasklets.MoveDumpToHdfs"/>

</beans>
